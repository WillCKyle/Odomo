{"version":3,"sources":["components/header.js","components/navbar.js","components/IssuesList.js","pages/issuePages/issue-content.js","pages/mainPages/NotFoundPage.js","components/CommentsList.js","components/UpvotesSection.js","components/AddCommentForm.js","pages/issuePages/IssuePage.js","pages/issuePages/QuestionPage.js","pages/mainPages/LandingPage.js","pages/mainPages/HomePage.js","pages/mainPages/ExplorePage.js","pages/mainPages/ConnectPage.js","pages/mainPages/ActionPage.js","pages/mainPages/MenuPage.js","pages/menuPages/AboutPage.js","pages/menuPages/ProfilePage.js","pages/menuPages/SettingsPage.js","App.js","serviceWorker.js","index.js"],"names":["Header","Component","NavBar","to","IssuesList","issues","map","issue","key","name","title","Issues","content","NotFoundPage","CommentsList","comments","comment","className","username","text","UpvotesSection","issueName","upvotes","setIssueInfo","upvoteIssue","a","fetch","method","result","json","body","id","onClick","AddCommentForm","useState","setUsername","commentText","setCommentText","addComment","JSON","stringify","headers","type","value","onChange","event","target","rows","col","IssuePage","match","params","issueContent","find","issueInfo","otherIssues","filter","useEffect","response","fetchData","class","paragraph","QuestionPage","LandingPage","HomeFeed","ExplorePage","ConnectPage","ActionPage","MenuPage","AboutPage","ProfilePage","SettingsPage","App","path","component","exact","HomePage","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"iQAceA,E,uKAVX,OACE,qC,GAHeC,aCiCNC,E,uKA5BX,OACE,gCAEE,6BACE,4BACE,4BACE,kBAAC,IAAD,CAAMC,GAAG,SAAT,SAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,YAAT,YAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,YAAT,YAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,WAAT,WAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,SAAT,gB,GApBOF,a,gCCQNG,EAVI,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACjB,oCACCA,EAAOC,KAAI,SAACC,EAAOC,GAAR,OACV,kBAAC,IAAD,CAAMA,IAAKA,EAAKL,GAAE,iBAAYI,EAAME,OAClC,4BAAKF,EAAMG,aCIFC,EAXA,CACb,CACEF,KAAM,aACNC,MAAO,oHACPE,QAAS,CAAC,+BAAD,oBCEEC,EAJM,kBACnB,sDCWaC,EAZM,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACnB,oCACA,yCACCA,EAAST,KAAI,SAACU,EAASR,GAAV,OACZ,yBAAKS,UAAU,UAAUT,IAAKA,GAC5B,4BAAKQ,EAAQE,UACb,2BAAIF,EAAQG,YCYHC,EAlBQ,SAAC,GAAwC,IAAvCC,EAAsC,EAAtCA,UAAWC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,aAErCC,EAAW,uCAAG,8BAAAC,EAAA,sEACGC,MAAM,eAAD,OAAgBL,EAAhB,WAAmC,CAC3DM,OAAQ,SAFQ,cACZC,EADY,gBAICA,EAAOC,OAJR,OAIZC,EAJY,OAKlBP,EAAaO,GALK,2CAAH,qDAQjB,OACE,yBAAKC,GAAG,mBACN,4BAAQC,QAAS,kBAAMR,MAAvB,UACA,0DAAgCF,EAAhC,YCqBSW,EAlCQ,SAAC,GAA+B,IAA9BZ,EAA6B,EAA7BA,UAAWE,EAAkB,EAAlBA,aAAkB,EACpBW,mBAAS,IADW,mBAC7ChB,EAD6C,KACnCiB,EADmC,OAEdD,mBAAS,IAFK,mBAE7CE,EAF6C,KAEhCC,EAFgC,KAI9CC,EAAU,uCAAG,8BAAAb,EAAA,sEACIC,MAAM,eAAD,OAAgBL,EAAhB,gBAAyC,CACjEM,OAAQ,OACRG,KAAMS,KAAKC,UAAU,CAACtB,WAAUC,KAAMiB,IACtCK,QAAS,CACP,eAAgB,sBALH,cACXb,EADW,gBAQEA,EAAOC,OART,OAQXC,EARW,OASjBP,EAAaO,GACbK,EAAY,IACZE,EAAe,IAXE,2CAAH,qDAchB,OACE,yBAAKN,GAAG,oBACN,6CACA,uCAEE,2BAAOW,KAAK,OAAOC,MAAOzB,EAAU0B,SAAU,SAACC,GAAD,OAAWV,EAAYU,EAAMC,OAAOH,WAEpF,0CAEE,8BAAUI,KAAK,IAAIC,IAAI,KAAKL,MAAOP,EAAaQ,SAAU,SAACC,GAAD,OAAWR,EAAeQ,EAAMC,OAAOH,WAEnG,4BAAQX,QAAS,kBAAMM,MAAvB,iBCoBSW,EA3CG,SAAC,GAAe,IAC1BxC,EADyB,EAAZyC,MACAC,OAAO1C,KACpBF,EAAQ6C,EAAaC,MAAM,SAAA9C,GAAK,OAAIA,EAAME,OAASA,KAF1B,EAIGyB,mBAAS,CAAEZ,QAAQ,EAAGP,SAAU,KAJnC,mBAIxBuC,EAJwB,KAIb/B,EAJa,KAMzBgC,EAAcH,EAAaI,QAAO,SAAAjD,GAAK,OAAIA,EAAME,OAASA,KAWhE,OATAgD,qBAAU,YACO,uCAAG,8BAAAhC,EAAA,sEACOC,MAAM,eAAD,OAAgBjB,IAD5B,cACViD,EADU,gBAEGA,EAAS7B,OAFZ,OAEVC,EAFU,OAGhBP,EAAaO,GAHG,2CAAH,qDAKf6B,KACC,CAAClD,IAGF,oCAEA,yBAAKmD,MAAM,mBACT,qCACA,4BAAKrD,EAAMG,OAEX,kBAAC,EAAD,CAAgBW,UAAWZ,EAAMa,QAASgC,EAAUhC,QAASC,aAAcA,IAE1EhB,EAAMK,QAAQN,KAAI,SAACuD,EAAWrD,GAAZ,OACjB,uBAAGA,IAAKA,GAAMqD,MAGhB,kBAAC,EAAD,CAAc9C,SAAUuC,EAAUvC,WAClC,kBAAC,EAAD,CAAgBM,UAAWZ,EAAMc,aAAcA,IAE/C,4CACA,kBAAC,EAAD,CAAYlB,OAAQkD,OChCXO,EARM,kBAEnB,oCACA,0CCWaC,EAdK,kBAElB,oCACA,gDACA,0SCOaC,EATE,kBAEf,oCACA,oCACA,kBAAC,EAAD,CAAY3D,OAAQ+C,MCEPa,EARK,kBAElB,oCACA,yCCKaC,EARK,kBAElB,oCACA,yCCKaC,EARI,kBAEjB,oCACA,wCCKaC,EARE,kBAEf,oCACA,sCCWaC,EAdG,kBAEhB,oCACA,2CACA,0SCIaC,EARK,kBAElB,oCACA,yCCKaC,EARM,kBAEnB,oCACA,0CC2DaC,G,6KAhCX,OACE,kBAAC,IAAD,KACA,yBAAKvD,UAAU,OAEb,kBAAC,EAAD,MAEA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOwD,KAAK,IAAIC,UAAWX,EAAaY,OAAK,IAC7C,kBAAC,IAAD,CAAOF,KAAK,QAAQC,UAAWE,EAAUD,OAAK,IAC9C,kBAAC,IAAD,CAAOF,KAAK,WAAWC,UAAWT,EAAaU,OAAK,IACpD,kBAAC,IAAD,CAAOF,KAAK,WAAWC,UAAWR,EAAaS,OAAK,IACpD,kBAAC,IAAD,CAAOF,KAAK,UAAUC,UAAWP,EAAYQ,OAAK,IAClD,kBAAC,IAAD,CAAOF,KAAK,QAAQC,UAAWN,EAAUO,OAAK,IAE9C,kBAAC,IAAD,CAAOF,KAAK,SAASC,UAAWL,EAAWM,OAAK,IAChD,kBAAC,IAAD,CAAOF,KAAK,WAAWC,UAAWJ,EAAaK,OAAK,IACpD,kBAAC,IAAD,CAAOF,KAAK,YAAYC,UAAWH,EAAcI,OAAK,IAEtD,kBAAC,IAAD,CAAOF,KAAK,eAAeC,UAAWzB,EAAW0B,OAAK,IACtD,kBAAC,IAAD,CAAOF,KAAK,kBAAkBC,UAAWZ,EAAca,OAAK,IAE5D,kBAAC,IAAD,CAAOD,UAAW7D,KAGpB,kBAAC,EAAD,Y,GA1BUZ,cClBE4E,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS9B,MACvB,2DCZN+B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.0029e386.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <header>\r\n\r\n\r\n\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport {\r\n  Link\r\n} from 'react-router-dom';\r\n\r\nclass NavBar extends Component {\r\n  render() {\r\n    return (\r\n      <footer>\r\n\r\n        <nav>\r\n          <ul>\r\n            <li>\r\n              <Link to=\"/home\">Home</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/explore\">Explore</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/connect\">Connect</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/action\">Action</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/menu\">Menu</Link>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst IssuesList = ({ issues }) => (\r\n  <>\r\n  {issues.map((issue, key) => (\r\n    <Link key={key} to={`/issue/${issue.name}`}>\r\n      <h3>{issue.title}</h3>\r\n    </Link>\r\n  ))}\r\n  </>\r\n);\r\n\r\nexport default IssuesList;\r\n","const Issues = [\r\n  {\r\n    name: 'usa-racism',\r\n    title: 'The United States government allows large racial disparities to exist within its borders and sphere of influence.',\r\n    content: [\r\n      `We'll see some content here.`,\r\n      `And some more.`\r\n    ]\r\n  }\r\n]\r\n\r\nexport default Issues;\r\n","import React from 'react';\r\n\r\nconst NotFoundPage = () => (\r\n  <h1>404 - Page not found.</h1>\r\n);\r\n\r\nexport default NotFoundPage;\r\n","import React from 'react';\r\n\r\nconst CommentsList = ({ comments }) => (\r\n  <>\r\n  <h3>Comments:</h3>\r\n  {comments.map((comment, key) => (\r\n    <div className=\"comment\" key={key}>\r\n      <h4>{comment.username}</h4>\r\n      <p>{comment.text}</p>\r\n    </div>\r\n  ))}\r\n  </>\r\n);\r\n\r\nexport default CommentsList;\r\n","import React from 'react';\r\n\r\nconst UpvotesSection = ({issueName, upvotes, setIssueInfo}) => {\r\n\r\n  const upvoteIssue = async () => {\r\n    const result = await fetch(`/api/issues/${issueName}/upvote`,{\r\n      method: 'post',\r\n    });\r\n    const body = await result.json();\r\n    setIssueInfo(body);\r\n  }\r\n\r\n  return (\r\n    <div id=\"upvotes-section\">\r\n      <button onClick={() => upvoteIssue()}>Upvote</button>\r\n      <p>This issue has been upvoted {upvotes} times</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpvotesSection;\r\n","import React, { useState } from 'react';\r\n\r\nconst AddCommentForm = ({issueName, setIssueInfo}) => {\r\n  const [username, setUsername] = useState('');\r\n  const [commentText, setCommentText] = useState('');\r\n\r\n  const addComment = async () => {\r\n    const result = await fetch(`/api/issues/${issueName}/add-comment`, {\r\n      method: 'post',\r\n      body: JSON.stringify({username, text: commentText}),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      }\r\n    });\r\n    const body = await result.json();\r\n    setIssueInfo(body);\r\n    setUsername('');\r\n    setCommentText('');\r\n  }\r\n\r\n  return (\r\n    <div id=\"add-comment-form\">\r\n      <h3>Add a Comment</h3>\r\n      <label>\r\n        Name:\r\n        <input type=\"text\" value={username} onChange={(event) => setUsername(event.target.value)} />\r\n      </label>\r\n      <label>\r\n        Comment:\r\n        <textarea rows=\"4\" col=\"50\" value={commentText} onChange={(event) => setCommentText(event.target.value)}/>\r\n      </label>\r\n      <button onClick={() => addComment()}>Add Comment</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddCommentForm;\r\n","import React, { useState, useEffect } from 'react';\r\nimport IssuesList from '../../components/IssuesList';\r\nimport issueContent from './issue-content';\r\nimport NotFoundPage from '../mainPages/NotFoundPage';\r\nimport CommentsList from '../../components/CommentsList';\r\nimport UpvotesSection from '../../components/UpvotesSection';\r\nimport AddCommentForm from '../../components/AddCommentForm';\r\n\r\nconst IssuePage = ({ match }) => {\r\n  const name = match.params.name;\r\n  const issue = issueContent.find( issue => issue.name === name );\r\n\r\n  const [issueInfo, setIssueInfo] = useState({ upvotes:0, comments: [] });\r\n\r\n  const otherIssues = issueContent.filter(issue => issue.name !== name);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await fetch(`/api/issues/${name}`);\r\n      const body = await response.json();\r\n      setIssueInfo(body);\r\n    }\r\n    fetchData();\r\n  }, [name]);\r\n\r\n  return (\r\n    <>\r\n\r\n    <div class=\"container-fluid\">\r\n      <h1>Issue</h1>\r\n      <h1>{issue.title}</h1>\r\n\r\n      <UpvotesSection issueName={name} upvotes={issueInfo.upvotes} setIssueInfo={setIssueInfo} />\r\n\r\n      {issue.content.map((paragraph, key) => (\r\n        <p key={key}>{paragraph}</p>\r\n      ))}\r\n\r\n      <CommentsList comments={issueInfo.comments} />\r\n      <AddCommentForm issueName={name} setIssueInfo={setIssueInfo} />\r\n\r\n      <h3>Other Issues</h3>\r\n      <IssuesList issues={otherIssues} />\r\n    </div>\r\n\r\n    </>\r\n  );\r\n\r\n  if (!issue) { return <NotFoundPage /> };\r\n};\r\n\r\nexport default IssuePage;\r\n","import React from 'react';\r\n\r\nconst QuestionPage = () => (\r\n\r\n  <>\r\n  <h1>Question</h1>\r\n  </>\r\n\r\n);\r\n\r\nexport default QuestionPage;\r\n","import React from 'react';\r\n\r\nconst LandingPage = () => (\r\n\r\n  <>\r\n  <h1>Welcome to Odomo</h1>\r\n  <p>\r\n    Odomo is a web app that helps social movements strategize, mobilize and connect.\r\n    The site will provide encrypted messaging,\r\n    a central hub for events and fundraising campaigns,\r\n    and a consensus-building method of deliberation that prioritizes the leadership of BIPOC.\r\n  </p>\r\n  </>\r\n\r\n);\r\n\r\nexport default LandingPage;\r\n","import React from 'react';\r\nimport IssuesList from '../../components/IssuesList.js';\r\nimport issueContent from '../issuePages/issue-content';\r\n\r\nconst HomeFeed = () => (\r\n\r\n  <>\r\n  <h1>Home</h1>\r\n  <IssuesList issues={issueContent} />\r\n  </>\r\n\r\n);\r\n\r\nexport default HomeFeed;\r\n","import React from 'react';\r\n\r\nconst ExplorePage = () => (\r\n\r\n  <>\r\n  <h1>Explore</h1>\r\n  </>\r\n\r\n);\r\n\r\nexport default ExplorePage;\r\n","import React from 'react';\r\n\r\nconst ConnectPage = () => (\r\n\r\n  <>\r\n  <h1>Connect</h1>\r\n  </>\r\n\r\n);\r\n\r\nexport default ConnectPage;\r\n","import React from 'react';\r\n\r\nconst ActionPage = () => (\r\n\r\n  <>\r\n  <h1>Action</h1>\r\n  </>\r\n\r\n);\r\n\r\nexport default ActionPage;\r\n","import React from 'react';\r\n\r\nconst MenuPage = () => (\r\n\r\n  <>\r\n  <h1>Menu</h1>\r\n  </>\r\n\r\n);\r\n\r\nexport default MenuPage;\r\n","import React from 'react';\r\n\r\nconst AboutPage = () => (\r\n\r\n  <>\r\n  <h1>About Odomo</h1>\r\n  <p>\r\n    Odomo is a web app that helps social movements strategize, mobilize and connect.\r\n    The site will provide encrypted messaging,\r\n    a central hub for events and fundraising campaigns,\r\n    and a consensus-building method of deliberation that prioritizes the leadership of BIPOC.\r\n  </p>\r\n  </>\r\n\r\n);\r\n\r\nexport default AboutPage;\r\n","import React from 'react';\r\n\r\nconst ProfilePage = () => (\r\n\r\n  <>\r\n  <h1>Profile</h1>\r\n  </>\r\n\r\n);\r\n\r\nexport default ProfilePage;\r\n","import React from 'react';\r\n\r\nconst SettingsPage = () => (\r\n\r\n  <>\r\n  <h1>Settings</h1>\r\n  </>\r\n\r\n);\r\n\r\nexport default SettingsPage;\r\n","import React, { Component } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch\n} from 'react-router-dom';\n\n// components\nimport Header from './components/header';\nimport NavBar from './components/navbar';\n\n// pages\nimport IssuePage from './pages/issuePages/IssuePage';\nimport QuestionPage from './pages/issuePages/QuestionPage';\n\nimport LandingPage from './pages/mainPages/LandingPage';\nimport HomePage from './pages/mainPages/HomePage';\nimport ExplorePage from './pages/mainPages/ExplorePage';\nimport ConnectPage from './pages/mainPages/ConnectPage';\nimport ActionPage from './pages/mainPages/ActionPage';\nimport MenuPage from './pages/mainPages/MenuPage';\nimport NotFoundPage from './pages/mainPages/NotFoundPage';\n\nimport AboutPage from './pages/menuPages/AboutPage';\nimport ProfilePage from './pages/menuPages/ProfilePage';\nimport SettingsPage from './pages/menuPages/SettingsPage';\n\n// includes\nimport './Assets/css/default.min.css'\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n      <div className=\"App\">\n\n        <Header />\n\n        <Switch>\n          <Route path=\"/\" component={LandingPage} exact />\n          <Route path=\"/home\" component={HomePage} exact />\n          <Route path=\"/explore\" component={ExplorePage} exact />\n          <Route path=\"/connect\" component={ConnectPage} exact />\n          <Route path=\"/action\" component={ActionPage} exact />\n          <Route path=\"/menu\" component={MenuPage} exact />\n\n          <Route path=\"/about\" component={AboutPage} exact />\n          <Route path=\"/profile\" component={ProfilePage} exact />\n          <Route path=\"/settings\" component={SettingsPage} exact />\n\n          <Route path=\"/issue/:name\" component={IssuePage} exact />\n          <Route path=\"/question/:name\" component={QuestionPage} exact />\n\n          <Route component={NotFoundPage} />\n        </Switch>\n\n        <NavBar />\n\n      </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport \"whatwg-fetch\";\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}